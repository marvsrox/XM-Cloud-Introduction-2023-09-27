export function ControlledPromise(onSuccess, onFailure = (e) => { }) {
    var first;
    const restart = () => {
        var resolve;
        var reject;
        const promise = new Promise((success, failure) => {
            resolve = (value) => {
                onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(value);
                success(value);
            };
            reject = failure;
        });
        var controlled = Object.assign(promise, {
            resolve,
            reject,
            restart,
            first
        });
        first = controlled;
        // Avoid unhandled rejection
        controlled.catch(onFailure);
        return controlled;
    };
    return restart();
}
//# sourceMappingURL=promise.js.map