import React from 'react';
import ReactDOM from 'react-dom';
import { FEAASBase } from '../components/FEAASBase.js';
import { kebabCase, reverseKebabCase } from '../utils/string.js';
const convertSchemaPropertiesToKebabCase = (schema) => {
    if (!schema)
        return;
    let kebabSchemaProperties, kebabRequiredProperties;
    if (schema.properties) {
        kebabSchemaProperties = Object.keys(schema.properties).reduce((acc, key) => {
            acc[kebabCase(key)] = schema.properties[key];
            return acc;
        }, {});
        kebabRequiredProperties = schema.required.map((item) => kebabCase(item));
    }
    return { ...schema, properties: kebabSchemaProperties, required: kebabRequiredProperties };
};
export function FEAASExternalProps(element = this) {
    const attributes = element.getAttributeNames();
    const props = attributes.reduce((prev, curr) => {
        if (!curr.startsWith('data-attribute') && !['class', 'id', 'contenteditable'].includes(curr))
            return { ...prev, [reverseKebabCase(curr)]: element.getAttribute(curr) };
        else
            return prev;
    }, {});
    return props;
}
export default class FEAASExternal extends FEAASBase {
    load() {
        return Promise.resolve({ React, ReactDOM });
    }
    render(props, { React }) {
        var _a;
        const { dataExternalId: id } = props;
        const Component = (_a = FEAASExternal.registered[id]) === null || _a === void 0 ? void 0 : _a.component;
        if (!Component)
            console.warn('FEAASExternal: The component you requested is not registered');
        return React.createElement(React.Fragment, null, Component && React.createElement(Component, { ...props }));
    }
    getProps() {
        return FEAASExternalProps(this);
    }
    static registerComponent(component, schema = {}, id) {
        FEAASExternal.registered[id || component.name] = { component, schema };
    }
    static setRegistrationCallback() {
        // if registerCallback has not already been triggered by another component, set it
        if (!FEAASExternal.registrationCallback && typeof window !== 'undefined') {
            FEAASExternal.registrationCallback = setTimeout(() => {
                var _a, _b;
                // create components array from object
                const components = Object.keys(FEAASExternal.registered).map((name) => ({
                    ...FEAASExternal.registered[name],
                    name,
                    schema: convertSchemaPropertiesToKebabCase(FEAASExternal.registered[name].schema),
                    component: FEAASExternal.registered[name].component.toString()
                }));
                // send components from iframe to parent window
                (_a = window === null || window === void 0 ? void 0 : window.parent) === null || _a === void 0 ? void 0 : _a.postMessage(JSON.stringify({
                    action: 'register-components',
                    data: components
                }), (_b = window === null || window === void 0 ? void 0 : window.parent) === null || _b === void 0 ? void 0 : _b.origin);
            }, 500);
        }
    }
    static loadComponents() {
        const components = JSON.parse(sessionStorage.getItem('feaas-external-components'));
        components.forEach((c) => {
            const name = c.name;
            const schema = c.schema;
            const component = eval('(' + c.component + ')');
            FEAASExternal.registerComponent(component, schema, name);
        });
    }
}
FEAASExternal.registered = {};
FEAASExternal.register('feaas-external');
FEAASExternal.setRegistrationCallback();
export { FEAASExternal as External };
//# sourceMappingURL=FEAASExternal.js.map