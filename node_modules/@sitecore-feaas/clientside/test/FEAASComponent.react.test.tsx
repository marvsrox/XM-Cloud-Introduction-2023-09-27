import { beforeEach, afterAll, beforeAll, describe, expect, it, vi } from 'vitest'
import { FEAASComponent } from '../src/components/FEAASComponent.js'
import { renderDOMContent } from '../src/dom/rendering.js'
import { clearFetchCache } from '../src/fetch.js'
import { Component } from '../src/ui/react.js'
import ReactDOM from 'react-dom'
import React from 'react'

describe('React', () => {
  it('render react component', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component src='library/test'></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test"></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component src='library/test'></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test"></feaas-component></section>'
    )
  })
  it('render react component with src and overrides', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component src='library/test' component='test2'></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test2" src="library/test"></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component src='library/test' component='test2'></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test2" src="library/test"></feaas-component></section>'
    )
  })
  it('render react component with extras', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component src='library/test' version='v1'></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" version="v1" src="library/test"></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component src='library/test' version='v1'></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" version="v1" src="library/test"></feaas-component></section>'
    )
  })
  it('render react template', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component src='library/test' template={'<div data-path-src="abc">'}></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test"><div data-path-src="abc"></div></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component src='library/test' template={'<div data-path-src="abc">'}></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test"><div data-path-src="abc"></div></feaas-component></section>'
    )
  })
  it('render template with data and src', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component src='library/test' template={'<div data-path-src="abc">'} data={{ abc: 321 }}></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test" data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component src='library/test' template={'<div data-path-src="abc">'} data={{ abc: 321 }}></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test" data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
  })
  it('render template with data but without src', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component
          library='library'
          component='test'
          template={'<div data-path-src="abc">'}
          data={{ abc: 321 }}
        ></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component
          library='library'
          component='test'
          template={'<div data-path-src="abc">'}
          data={{ abc: 321 }}
        ></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
  })
  it('render template with data with src and stringy data', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component src='library/test' template={'<div data-path-src="abc">'} data={'{"abc":321}'}></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test" data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component src='library/test' template={'<div data-path-src="abc">'} data={'{"abc":321}'}></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component library="library" component="test" src="library/test" data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
  })
  it('render template with data and template', () => {
    const div = document.createElement('div')
    document.body.appendChild(div)
    const root = ReactDOM.render(
      <section>
        <Component template={'<div data-path-src="abc">'} data={'{"abc":321}'}></Component>
      </section>,
      div
    )
    expect(div.innerHTML).toEqual(
      '<section><feaas-component data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
    const div2 = document.createElement('div')
    document.body.appendChild(div2)
    div2.innerHTML = div.innerHTML
    ReactDOM.hydrate(
      <section>
        <Component template={'<div data-path-src="abc">'} data={'{"abc":321}'}></Component>
      </section>,
      div2
    )
    expect(div2.innerHTML).toEqual(
      '<section><feaas-component data="{&quot;abc&quot;:321}"><div data-path-src="abc"></div></feaas-component></section>'
    )
  })
})
