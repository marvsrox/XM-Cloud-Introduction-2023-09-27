/// <reference types="react" resolution-mode="require"/>
import type * as FEAASPickerImports from '@sitecore-feaas/frontend/picker';
import { FEAASBase } from '../components/FEAASBase.js';
export declare function FEAASPickerProps(element?: FEAASBase<any, any>): {
    part: string;
    slot: string;
    mode: "library" | "element" | "themes";
    placeholder: string;
    frontend: string;
    src: string;
    hidden: boolean;
    variant: "internal" | "pages";
    context: FEAASPickerImports.SDK.HTMLLikeElement;
    onClose: (...args: any[]) => void;
    onContextAttributeSet: (context: any, attribute: string, value: string) => void;
};
export type FEAASPickerProps = ReturnType<typeof FEAASPickerProps>;
export declare class FEAASPicker extends FEAASBase<FEAASPickerProps, typeof FEAASPickerImports> {
    static observedAttributes: string[];
    defaultProps: Partial<{
        part: string;
        slot: string;
        mode: "library" | "element" | "themes";
        placeholder: string;
        frontend: string;
        src: string;
        hidden: boolean;
        variant: "internal" | "pages";
        context: FEAASPickerImports.SDK.HTMLLikeElement;
        onClose: (...args: any[]) => void;
        onContextAttributeSet: (context: any, attribute: string, value: string) => void;
    }>;
    getProps(): {
        part: string;
        slot: string;
        mode: "library" | "element" | "themes";
        placeholder: string;
        frontend: string;
        src: string;
        hidden: boolean;
        variant: "internal" | "pages";
        context: FEAASPickerImports.SDK.HTMLLikeElement;
        onClose: (...args: any[]) => void;
        onContextAttributeSet: (context: any, attribute: string, value: string) => void;
    };
    load(): Promise<typeof FEAASPickerImports>;
    render({ placeholder, context, mode, children, variant }: React.PropsWithChildren<FEAASPickerProps>, { Picker, React, ReactDOM }: typeof FEAASPickerImports): JSX.Element;
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'feaas-picker': Partial<typeof FEAASPickerImports>;
        }
    }
}
//# sourceMappingURL=FEAASPicker.d.ts.map