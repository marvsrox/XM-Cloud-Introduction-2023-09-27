/// <reference types="node" resolution-mode="require"/>
import React from 'react';
import ReactDOM from 'react-dom';
import { FEAASBase } from '../components/FEAASBase.js';
import { ReactJSX, ReactModules } from '../components/FEAASElement.js';
export declare function FEAASExternalProps(element?: FEAASBase): {};
export type RegisteredComponents = {
    [id: string]: {
        component: React.ElementType;
        schema: any;
    };
};
export type FEAASExternalProps = ReturnType<typeof FEAASExternalProps> & {
    dataExternalId: string;
};
export default class FEAASExternal extends FEAASBase<FEAASExternalProps, ReactModules> {
    static registered: RegisteredComponents;
    static registrationCallback: NodeJS.Timeout;
    load(): Promise<{
        React: typeof React;
        ReactDOM: typeof ReactDOM;
    }>;
    render(props: FEAASExternalProps, { React }: ReactModules): ReactJSX;
    getProps(): {};
    static registerComponent(component: React.FC, schema?: any, id?: string): void;
    static setRegistrationCallback(): void;
    static loadComponents(): void;
}
declare global {
    namespace JSX {
        interface IntrinsicElements {
            'feaas-external': {
                'data-external-id': string;
                children?: any;
                dangerouslySetInnerHTML?: {
                    __html: string;
                };
                [key: string]: any;
            };
        }
    }
}
export { FEAASExternal as External };
//# sourceMappingURL=FEAASExternal.d.ts.map